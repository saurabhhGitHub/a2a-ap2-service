# Generated by Django 5.0.1 on 2025-09-21 15:12

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('invoice_collections', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('payment_method_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stripe_payment_method_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('customer_id', models.CharField(db_index=True, max_length=100)),
                ('customer_name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('card', 'Credit/Debit Card'), ('ach', 'ACH Bank Transfer'), ('sepa', 'SEPA Direct Debit'), ('bacs', 'BACS Direct Debit')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('expired', 'Expired'), ('failed', 'Failed')], default='active', max_length=20)),
                ('last_four', models.CharField(blank=True, max_length=4)),
                ('brand', models.CharField(blank=True, max_length=20)),
                ('exp_month', models.PositiveIntegerField(blank=True, null=True)),
                ('exp_year', models.PositiveIntegerField(blank=True, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100)),
                ('account_type', models.CharField(blank=True, max_length=20)),
                ('mandate_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('mandate_status', models.CharField(default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'db_table': 'payment_methods',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['customer_id', 'status'], name='payment_met_custome_d734ff_idx'), models.Index(fields=['type', 'status'], name='payment_met_type_f117be_idx'), models.Index(fields=['mandate_id'], name='payment_met_mandate_920cf7_idx')],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount_cents', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('method', models.CharField(choices=[('card', 'Credit/Debit Card'), ('ach', 'ACH Bank Transfer'), ('sepa', 'SEPA Direct Debit'), ('bacs', 'BACS Direct Debit')], max_length=20)),
                ('stripe_payment_intent_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('stripe_charge_id', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('requires_action', 'Requires Action')], db_index=True, default='pending', max_length=20)),
                ('amount_received_cents', models.PositiveIntegerField(default=0)),
                ('fees_charged_cents', models.PositiveIntegerField(default=0)),
                ('net_amount_cents', models.PositiveIntegerField(default=0)),
                ('failure_code', models.CharField(blank=True, max_length=100)),
                ('failure_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('settled_at', models.DateTimeField(blank=True, null=True)),
                ('raw_stripe_response', models.JSONField(blank=True, default=dict)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='invoice_collections.invoice')),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payments', to='payment_processing.paymentmethod')),
            ],
            options={
                'db_table': 'payments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentRetry',
            fields=[
                ('retry_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('retry_number', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], db_index=True, default='scheduled', max_length=20)),
                ('scheduled_at', models.DateTimeField()),
                ('attempted_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('retry_reason', models.CharField(max_length=100)),
                ('error_message', models.TextField(blank=True)),
                ('new_stripe_payment_intent_id', models.CharField(blank=True, max_length=100)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retries', to='payment_processing.payment')),
            ],
            options={
                'db_table': 'payment_retries',
                'ordering': ['-scheduled_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentWebhook',
            fields=[
                ('webhook_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stripe_event_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('webhook_type', models.CharField(choices=[('payment_intent.succeeded', 'Payment Intent Succeeded'), ('payment_intent.payment_failed', 'Payment Intent Failed'), ('payment_intent.canceled', 'Payment Intent Canceled'), ('payment_intent.requires_action', 'Payment Intent Requires Action'), ('charge.succeeded', 'Charge Succeeded'), ('charge.failed', 'Charge Failed'), ('payment_method.attached', 'Payment Method Attached'), ('payment_method.detached', 'Payment Method Detached')], db_index=True, max_length=50)),
                ('processed', models.BooleanField(default=False)),
                ('processing_error', models.TextField(blank=True)),
                ('raw_webhook_data', models.JSONField()),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='webhooks', to='payment_processing.payment')),
            ],
            options={
                'db_table': 'payment_webhooks',
                'ordering': ['-received_at'],
            },
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['invoice', 'created_at'], name='payments_invoice_176532_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status', 'created_at'], name='payments_status_426d4f_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['stripe_payment_intent_id'], name='payments_stripe__6cb0ea_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_method', 'created_at'], name='payments_payment_5d4f1d_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentretry',
            index=models.Index(fields=['payment', 'retry_number'], name='payment_ret_payment_c9b42c_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentretry',
            index=models.Index(fields=['status', 'scheduled_at'], name='payment_ret_status_3b21c3_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['stripe_event_id'], name='payment_web_stripe__23d0fa_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['webhook_type', 'received_at'], name='payment_web_webhook_5c6383_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['processed', 'received_at'], name='payment_web_process_ee3d53_idx'),
        ),
    ]
