# Generated by Django 5.0.1 on 2025-09-21 18:12

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('invoice_collections', '0003_alter_invoice_external_invoice_id'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentProcessor',
            fields=[
                ('processor_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('processor_name', models.CharField(max_length=100, unique=True)),
                ('processor_type', models.CharField(choices=[('stripe', 'Stripe'), ('adyen', 'Adyen'), ('plaid', 'Plaid'), ('banking_api', 'Banking API')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('api_endpoint', models.URLField()),
                ('webhook_endpoint', models.URLField(blank=True)),
                ('api_key', models.CharField(max_length=255)),
                ('secret_key', models.CharField(blank=True, max_length=255)),
                ('supported_methods', models.JSONField(default=list)),
                ('supported_currencies', models.JSONField(default=list)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Maintenance'), ('error', 'Error')], default='active', max_length=20)),
                ('last_health_check', models.DateTimeField(blank=True, null=True)),
                ('consecutive_failures', models.PositiveIntegerField(default=0)),
                ('requests_per_minute', models.PositiveIntegerField(default=60)),
                ('requests_per_hour', models.PositiveIntegerField(default=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'payment_processors',
                'ordering': ['processor_name'],
                'indexes': [models.Index(fields=['processor_type', 'status'], name='payment_pro_process_ccd98a_idx'), models.Index(fields=['status', 'last_health_check'], name='payment_pro_status_008cfe_idx')],
            },
        ),
        migrations.CreateModel(
            name='AP2PaymentRequest',
            fields=[
                ('request_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ap2_request_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('mandate_id', models.CharField(db_index=True, max_length=100)),
                ('payment_method', models.CharField(choices=[('ach', 'ACH Bank Transfer'), ('card', 'Credit/Debit Card'), ('sepa', 'SEPA Direct Debit'), ('bacs', 'BACS Direct Debit'), ('wire', 'Wire Transfer')], max_length=20)),
                ('amount_cents', models.PositiveIntegerField()),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('description', models.TextField(blank=True)),
                ('ap2_version', models.CharField(default='1.0', max_length=10)),
                ('idempotency_key', models.CharField(db_index=True, max_length=100, unique=True)),
                ('context_data', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('received', 'Received'), ('processing', 'Processing'), ('authorized', 'Authorized'), ('settled', 'Settled'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='received', max_length=20)),
                ('external_transaction_id', models.CharField(blank=True, max_length=100)),
                ('settlement_amount_cents', models.PositiveIntegerField(default=0)),
                ('fees_charged_cents', models.PositiveIntegerField(default=0)),
                ('net_amount_cents', models.PositiveIntegerField(default=0)),
                ('error_code', models.CharField(blank=True, max_length=100)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('settled_at', models.DateTimeField(blank=True, null=True)),
                ('raw_request', models.JSONField(default=dict)),
                ('raw_response', models.JSONField(blank=True, default=dict)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invoice_collections.invoice')),
                ('processor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payment_agent.paymentprocessor')),
            ],
            options={
                'db_table': 'ap2_payment_requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentSettlement',
            fields=[
                ('settlement_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('settlement_type', models.CharField(choices=[('immediate', 'Immediate'), ('next_day', 'Next Day'), ('standard', 'Standard (2-3 days)'), ('extended', 'Extended (5-7 days)')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('settled', 'Settled'), ('failed', 'Failed'), ('reversed', 'Reversed')], default='pending', max_length=20)),
                ('gross_amount_cents', models.PositiveIntegerField()),
                ('fees_cents', models.PositiveIntegerField()),
                ('net_amount_cents', models.PositiveIntegerField()),
                ('external_settlement_id', models.CharField(blank=True, max_length=100)),
                ('bank_reference', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('settled_at', models.DateTimeField(blank=True, null=True)),
                ('expected_settlement_date', models.DateTimeField()),
                ('reconciled', models.BooleanField(default=False)),
                ('reconciled_at', models.DateTimeField(blank=True, null=True)),
                ('reconciliation_reference', models.CharField(blank=True, max_length=100)),
                ('payment_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='settlements', to='payment_agent.ap2paymentrequest')),
            ],
            options={
                'db_table': 'payment_settlements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentWebhook',
            fields=[
                ('webhook_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('webhook_type', models.CharField(choices=[('payment.succeeded', 'Payment Succeeded'), ('payment.failed', 'Payment Failed'), ('payment.cancelled', 'Payment Cancelled'), ('settlement.completed', 'Settlement Completed'), ('mandate.updated', 'Mandate Updated'), ('mandate.revoked', 'Mandate Revoked')], max_length=30)),
                ('external_event_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('processed', models.BooleanField(default=False)),
                ('processing_error', models.TextField(blank=True)),
                ('raw_payload', models.JSONField()),
                ('headers', models.JSONField(default=dict)),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('payment_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='payment_agent.ap2paymentrequest')),
                ('processor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payment_agent.paymentprocessor')),
            ],
            options={
                'db_table': 'payment_webhooks',
                'ordering': ['-received_at'],
            },
        ),
        migrations.AddIndex(
            model_name='ap2paymentrequest',
            index=models.Index(fields=['invoice', 'created_at'], name='ap2_payment_invoice_25d219_idx'),
        ),
        migrations.AddIndex(
            model_name='ap2paymentrequest',
            index=models.Index(fields=['processor', 'status'], name='ap2_payment_process_ad2aef_idx'),
        ),
        migrations.AddIndex(
            model_name='ap2paymentrequest',
            index=models.Index(fields=['status', 'created_at'], name='ap2_payment_status_c73db5_idx'),
        ),
        migrations.AddIndex(
            model_name='ap2paymentrequest',
            index=models.Index(fields=['ap2_request_id'], name='ap2_payment_ap2_req_827aee_idx'),
        ),
        migrations.AddIndex(
            model_name='ap2paymentrequest',
            index=models.Index(fields=['mandate_id'], name='ap2_payment_mandate_65de7b_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentsettlement',
            index=models.Index(fields=['payment_request', 'created_at'], name='payment_set_payment_9c05ac_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentsettlement',
            index=models.Index(fields=['status', 'expected_settlement_date'], name='payment_set_status_16b457_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentsettlement',
            index=models.Index(fields=['reconciled', 'settled_at'], name='payment_set_reconci_d4f56c_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['processor', 'received_at'], name='payment_web_process_0ae4bb_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['webhook_type', 'received_at'], name='payment_web_webhook_5c6383_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['processed', 'received_at'], name='payment_web_process_ee3d53_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['external_event_id'], name='payment_web_externa_f39383_idx'),
        ),
    ]
