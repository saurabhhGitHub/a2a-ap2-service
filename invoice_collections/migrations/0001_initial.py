# Generated by Django 5.0.1 on 2025-09-21 15:12

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('sf_invoice_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('amount_cents', models.PositiveIntegerField(help_text='Amount in cents to avoid floating point issues', validators=[django.core.validators.MinValueValidator(1)])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('customer_id', models.CharField(db_index=True, max_length=100)),
                ('customer_name', models.CharField(max_length=255)),
                ('mandate_id', models.CharField(db_index=True, max_length=100)),
                ('payment_method', models.CharField(default='ACH', max_length=50)),
                ('due_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], db_index=True, default='pending', max_length=20)),
                ('approved_by', models.EmailField(max_length=254)),
                ('idempotency_key', models.CharField(db_index=True, max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'db_table': 'invoices',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'created_at'], name='invoices_status_218b80_idx'), models.Index(fields=['customer_id', 'status'], name='invoices_custome_90a13d_idx'), models.Index(fields=['due_date', 'status'], name='invoices_due_dat_4b5593_idx')],
            },
        ),
        migrations.CreateModel(
            name='CollectionRequest',
            fields=[
                ('request_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('idempotency_key', models.CharField(db_index=True, max_length=255, unique=True)),
                ('status', models.CharField(choices=[('received', 'Received'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], db_index=True, default='received', max_length=20)),
                ('raw_request_data', models.JSONField()),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('invoice', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collection_request', to='invoice_collections.invoice')),
            ],
            options={
                'db_table': 'collection_requests',
                'ordering': ['-received_at'],
                'indexes': [models.Index(fields=['idempotency_key'], name='collection__idempot_9e0602_idx'), models.Index(fields=['status', 'received_at'], name='collection__status_3390f3_idx')],
            },
        ),
        migrations.CreateModel(
            name='AgentAction',
            fields=[
                ('action_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('collection_initiated', 'Collection Initiated'), ('payment_processed', 'Payment Processed'), ('payment_failed', 'Payment Failed'), ('status_updated', 'Status Updated'), ('webhook_received', 'Webhook Received'), ('retry_attempted', 'Retry Attempted'), ('manual_intervention', 'Manual Intervention')], db_index=True, max_length=50)),
                ('decision', models.CharField(blank=True, choices=[('approve', 'Approve'), ('reject', 'Reject'), ('retry', 'Retry'), ('escalate', 'Escalate'), ('auto_process', 'Auto Process')], max_length=20, null=True)),
                ('payload', models.JSONField(blank=True, default=dict)),
                ('response_data', models.JSONField(blank=True, default=dict)),
                ('human_actor', models.EmailField(blank=True, max_length=254, null=True)),
                ('system_actor', models.CharField(default='collections-agent', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('error_message', models.TextField(blank=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_actions', to='invoice_collections.invoice')),
            ],
            options={
                'db_table': 'agent_actions',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['invoice', 'created_at'], name='agent_actio_invoice_8d61a0_idx'), models.Index(fields=['action_type', 'created_at'], name='agent_actio_action__57b048_idx'), models.Index(fields=['decision', 'created_at'], name='agent_actio_decisio_2f7628_idx')],
            },
        ),
        migrations.CreateModel(
            name='PaymentAttempt',
            fields=[
                ('attempt_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('attempt_number', models.PositiveIntegerField(default=1)),
                ('status', models.CharField(choices=[('initiated', 'Initiated'), ('processing', 'Processing'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], db_index=True, default='initiated', max_length=20)),
                ('stripe_payment_intent_id', models.CharField(blank=True, max_length=100)),
                ('stripe_charge_id', models.CharField(blank=True, max_length=100)),
                ('amount_cents', models.PositiveIntegerField()),
                ('fees_charged_cents', models.PositiveIntegerField(default=0)),
                ('error_code', models.CharField(blank=True, max_length=100)),
                ('error_message', models.TextField(blank=True)),
                ('initiated_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('raw_stripe_response', models.JSONField(blank=True, default=dict)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_attempts', to='invoice_collections.invoice')),
            ],
            options={
                'db_table': 'payment_attempts',
                'ordering': ['-initiated_at'],
                'indexes': [models.Index(fields=['invoice', 'attempt_number'], name='payment_att_invoice_b75a76_idx'), models.Index(fields=['status', 'initiated_at'], name='payment_att_status_e465ad_idx'), models.Index(fields=['stripe_payment_intent_id'], name='payment_att_stripe__eec25c_idx')],
            },
        ),
    ]
